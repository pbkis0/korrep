F1.cs
        public F1()
        public List<Team> getTeams()
        public void add(Team t)
        public void delete(string teamName)
        public void update(string teamName, string newTeamName)
        public bool existTeamName(string teamName)
        public bool existRacer(string racerName, int racerAge)
        public Racer searchRacerByName(string teamName, string racerName)

Megoldások:
1, Ha üres, a kontruktor blokja pl{}, akkor vagy példányosítani kell, vagy this kulcsozval össze kötni.
public F1()
        {
            teams = new List<Team>();
        }

2,
      public List<Team> getTeams()
        {
            //Listának a get-tere
            return teams;
        }

3,Új csapat hozzáadása, az F1 objektumhoz Team listájához., az új csapat a TEAM t objektu
 public void add(Team t)
        {
            teams.Add(t);
        }

4,
 public void delete(string teamName)
        {
            foreach (var t in teams )
            {
                if (t.getName() == teamName)
                {
                    t.deleteAllRacersInTeam();
                    teams.Remove(t);
                }
                else
                {
                    throw new F1Exception("A csapat nem létezik");
                }

            }
        }

5,
public void update(string teamName, string newTeamName)
        {
            foreach (var t in teams)
            {
                if (t.getName() == teamName)
                {
                    t.update(newTeamName);
                    return;
                }

            }

            throw new F1Exception("A csapat nem lézetik");
        }

6,
public bool existTeamName(string teamName)
        {
            foreach ( var t in teams)
            {
                if (t.getName() == teamName)
                {
                    return true;
                }

            }
            return false;
        }

7,
  public bool existRacer(string racerName, int racerAge)
        {
            foreach (var t in teams)
            {
                if (t.isRacerExist(racerName, racerAge))
                {
                    return true;
                }
            }

            return false;
        }


8,
      public Racer searchRacerByName(string teamName, string racerName)
        {
            foreach (var t in teams)
            {
                if (t.getName() == teamName)
                {
                    return t.serchRacerByName(racerName); // ez olyan mintha return null -> ha nincs meg név alapján
                }

            }
            throw new F1Exception("A csapat nem lézetik adott nevű versenyzője");
        }

9,